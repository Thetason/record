// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  password  String   // 비밀번호 필드 추가
  name      String
  bio       String?
  location  String?
  website   String?
  phone     String?
  avatar    String?
  
  // 프로필 설정
  isPublic  Boolean  @default(true)
  
  // 구독 플랜
  plan      String   @default("free") // free, premium, pro
  planExpiry DateTime? // 프리미엄 플랜 만료일
  reviewLimit Int    @default(50) // 무료: 50개, 프리미엄: 무제한(-1)
  
  // 통계
  profileViews Int     @default(0)
  
  // 타임스탬프
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // 관계
  reviews   Review[]
  sessions  Session[]
  accounts  Account[]
  payments  Payment[]
  
  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("sessions")
}

model Review {
  id          String   @id @default(cuid())
  platform    String   // 네이버, 카카오맵, 구글, 크몽 등
  business    String   // 업체명
  rating      Int      // 평점 (1-5)
  content     String   // 리뷰 내용
  author      String   // 리뷰 작성자 (익명화된 이름)
  reviewDate  DateTime // 실제 리뷰 작성일
  
  // 메타데이터
  isVerified  Boolean  @default(false) // 검증 여부
  isPublic    Boolean  @default(true)  // 공개 여부
  
  // 이미지 (OCR용)
  imageUrl    String?
  
  // 소유자
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // 타임스탬프
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("reviews")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Payment {
  id            String   @id @default(cuid())
  userId        String
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // 결제 정보
  paymentId     String   @unique // 토스페이먼츠 결제 ID
  orderId       String   @unique // 주문 ID
  amount        Int      // 결제 금액
  method        String   // 결제 수단 (카드, 계좌이체 등)
  status        String   // 결제 상태 (DONE, CANCELED, PARTIAL_CANCELED 등)
  
  // 구독 정보
  plan          String   // premium, pro
  period        String   // monthly, yearly
  billingCycle  DateTime // 다음 결제일
  
  // 타임스탬프
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  @@map("payments")
}